"use strict";
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _1 = require(".");
describe('pack and unpack', function () {
    it('is an async constructor', function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var packUnpack, unresolvedVal, val;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    packUnpack = new _1.DIDComm();
                    unresolvedVal = packUnpack.Ready;
                    expect(unresolvedVal).toBeInstanceOf(Promise);
                    return [4 /*yield*/, packUnpack.Ready];
                case 1:
                    val = _a.sent();
                    expect(val).toEqual(undefined);
                    return [2 /*return*/];
            }
        });
    }); });
    it('it packs and unpacks a message', function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var packUnpack, alice, bob, message, packedMsg, unpackedMsg;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    packUnpack = new _1.DIDComm();
                    return [4 /*yield*/, packUnpack.Ready];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, packUnpack.generateKeyPair()];
                case 2:
                    alice = _a.sent();
                    return [4 /*yield*/, packUnpack.generateKeyPair()];
                case 3:
                    bob = _a.sent();
                    message = 'I AM A PRIVATE MESSAGE';
                    return [4 /*yield*/, packUnpack.packMessage(message, [bob.publicKey], alice)];
                case 4:
                    packedMsg = _a.sent();
                    return [4 /*yield*/, packUnpack.unpackMessage(packedMsg, bob)];
                case 5:
                    unpackedMsg = _a.sent();
                    expect(unpackedMsg.message).toEqual(message);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=index.test.js.map